const { hmacSign } = require('../lib/utils');

exports.lightDevice = {
  productKey: 'a',
  deviceName: 'b',
  deviceSecret: 'c',
  brokerUrl: 'tcp://127.0.0.1:1883/'
};

exports.aliyunDevice1 = {
  productKey: 'a1aq9sQk2JE',
  deviceName: 'sdk_device1',
  deviceSecret: 'shvvZGkq4mM641WUhpfJpyInVeJhAH2y',
};
exports.aliyunGateway1 = {
  productKey: 'a1BOOa9HG6Z',
  deviceName: 'sdk_gateway1',
  deviceSecret: 'foepBtCT0Jl6x640KKQCPeYi9Kv8NdSV'
};
exports.airBox = {
  productKey: 'a',
  deviceName: 'b',
  deviceSecret: 'c',
  brokerUrl: 'tcp://127.0.0.1:1883/'
};

exports.gateway = {
  productKey: 'a',
  deviceName: 'b',
  deviceSecret: 'c',
  brokerUrl: 'tcp://127.0.0.1:1883/'
};

exports.gateway2 = {
  productKey: 'a',
  deviceName: 'b',
  deviceSecret: 'c',
  brokerUrl: 'tcp://127.0.0.1:1883/'
};

exports.testDevices = [
  {
    productKey: 'a',
    deviceName: 'b',
    deviceSecret: 'c',
    brokerUrl: 'tcp://127.0.0.1:1883/'
  }
];

exports.createTestDevicesConfig = () => {
  return [
    {
      productKey: 'a',
      deviceName: 'b',
      deviceSecret: 'c',
      brokerUrl: 'tcp://127.0.0.1:1883/'
    }
  ].map(deviceConfig => {
    const device = {
      productKey: deviceConfig.productKey,
      deviceName: deviceConfig.deviceName,
      clientId: `${deviceConfig.productKey}&${deviceConfig.deviceName}`,
      timestamp: String(Date.now()),
      brokerUrl: deviceConfig.brokerUrl
    };
    device.signMethod = `hmacsha1`;
    const signcontent = `clientId${device.clientId}deviceName${
      device.deviceName
    }productKey${device.productKey}timestamp${device.timestamp}`;
    device.sign = hmacSign('sha1', deviceConfig.deviceSecret, signcontent);
    return device;
  });
};
