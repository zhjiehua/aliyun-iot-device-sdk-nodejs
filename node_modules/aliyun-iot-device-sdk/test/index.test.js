const aliyunIot = require('../');
const fixtures = require('./fixtures');

describe('test connectability with linkPlatform ', () => {
  //设备可连接行测试
  test('device connectability should be ok', done => {
    const device = aliyunIot.device(fixtures.aliyunDevice1);
    device.on('connect', () => {
      expect(device.clientId).toContain('&');
      device.end();
      done();
    });
  });  
  //网关可连接行测试
  test('gateway connectability should be ok', done => {
    const device = aliyunIot.gateway(fixtures.aliyunGateway1);
    device.on('connect', () => {
      expect(device.clientId).toContain('&');
      device.end();
      done();
    });
  });

  //设备三元组大小写可以忽略
  test('device pk,dn,ds should be ignore case ', done => {
    const device = aliyunIot.device({
      ProdUCtKey: 'a1aq9sQk2JE',
      deViceName: 'sdk_device1',
      deVicEsecret: 'shvvZGkq4mM641WUhpfJpyInVeJhAH2y',
    });
    device.on('connect', () => {
      expect(device.clientId).toContain('&');
      device.end();
      done();
    });
  });  

  //网关三元组大小写可以忽略
  test('device pk,dn,ds should be ignore case ', done => {
    const gateway = aliyunIot.gateway({
      ProdUCtKey: 'a1BOOa9HG6Z',
      deViceName: 'sdk_gateway1',
      deVicEsecret: 'foepBtCT0Jl6x640KKQCPeYi9Kv8NdSV'
    });
    gateway.on('connect', () => {
      expect(gateway.clientId).toContain('&');
      gateway.end();
      done();
    });
  }); 
});
